# Model settings -------------------------------------------------------------------------------------------------------
model : mobilenetv3_large_100_yolo # (str) model name to be trained
# ckpt : # (str, optional) path to weights file for transfer learning or weight loading
ckpt : /mnt/michael/vidnn/runs/lightning_logs/version_1/checkpoints/last.ckpt # (str, optional) path to weights file for transfer learning or weight loading
task : detect # (str) detect, segment, classify, pose, obb

# Train settings -------------------------------------------------------------------------------------------------------
epochs: 100 # (int) number of epochs to train for
patience: 100 # (int) epochs to wait for no observable improvement for early stopping of training
batch_size: 2 # (int) number of images per batch
imgsz: 640 # (int) input images size as int for train and val modes
channels: 3 # (int) input images channels as int
workers: 8 # (int) number of worker threads for data loading (per RANK if DDP)
seed: 0 # (int) random seed for reproducibility
cos_lr: False # (bool) use cosine learning rate scheduler
close_mosaic: 10 # (int) disable mosaic augmentation for final epochs (0 to disable)
single_cls: False # (bool) train multi-class data as single-class
multi_scale: False # (bool) Whether to use multiscale during training
optimizer: SGD # (str) optimizer to use, choices=[SGD, Adam, Adamax, AdamW, NAdam, RAdam, RMSProp]
save_dir : /mnt/michael/vidnn/tmp # (str) dir for saving log, weights
version : 1 # (int) version number for resume training
resume: False # (bool) resume training from last checkpoint
trainer_options: # Pytorch Lightning trainer options
  accelerator: gpu # 'auto', 'gpu', 'cpu'
  devices: [0] # 'auto': use all, [0]: use 0 gpu, [0, 1]: use 0, 1 gpus
  check_val_every_n_epoch: 1
  precision: 16-mixed # Automatic Mixed Precision (AMP) training
  # num_sanity_val_steps: 2
  log_every_n_steps: 2

# Val/Test settings ----------------------------------------------------------------------------------------------------
conf: # (float, optional) object confidence threshold for detection (default 0.25 predict, 0.001 val)
iou: 0.7 # (float) intersection over union (IoU) threshold for NMS
max_det: 300 # (int) maximum number of detections per image

# Hyperparameters ------------------------------------------------------------------------------------------------------
lr0: 0.01 # (float) initial learning rate (i.e. SGD=1E-2, Adam=1E-3)
lrf: 0.01 # (float) final learning rate (lr0 * lrf)
momentum: 0.937 # (float) SGD momentum/Adam beta1
weight_decay: 0.0005 # (float) optimizer weight decay 5e-4
warmup_epochs: 3.0 # (float) warmup epochs (fractions ok)
warmup_momentum: 0.8 # (float) warmup initial momentum
warmup_bias_lr: 0.1 # (float) warmup initial bias lr
box: 7.5 # (float) box loss gain
cls: 0.5 # (float) cls loss gain (scale with pixels)
dfl: 1.5 # (float) dfl loss gain
nbs: 64 # (int) nominal batch size
hsv_h: 0.015 # (float) image HSV-Hue augmentation (fraction)
hsv_s: 0.7 # (float) image HSV-Saturation augmentation (fraction)
hsv_v: 0.4 # (float) image HSV-Value augmentation (fraction)
degrees: 0.0 # (float) image rotation (+/- deg)
translate: 0.1 # (float) image translation (+/- fraction)
scale: 0.5 # (float) image scale (+/- gain)
shear: 0.0 # (float) image shear (+/- deg)
perspective: 0.0 # (float) image perspective (+/- fraction), range 0-0.001
flipud: 0.0 # (float) image flip up-down (probability)
fliplr: 0.5 # (float) image flip left-right (probability)
mosaic: 1.0 # (float) image mosaic (probability)
mixup: 0.0 # (float) image mixup (probability)
cutmix: 0.0 # (float) image cutmix (probability)

# Dataset -------------------------------------------------------------------------------------------------------------
path: /mnt/michael/datasets/coco8 # dataset root dir
train: "images/train" # train images
val: "images/val" # val images
test: # test images (optional)

# path: /mnt/michael/datasets/coco # dataset root dir
# train: train2017.txt # train images
# val: val2017.txt # val images
# test: # test images (optional)

# Classes
names:
  0: person
  1: bicycle
  2: car
  3: motorcycle
  4: airplane
  5: bus
  6: train
  7: truck
  8: boat
  9: traffic light
  10: fire hydrant
  11: stop sign
  12: parking meter
  13: bench
  14: bird
  15: cat
  16: dog
  17: horse
  18: sheep
  19: cow
  20: elephant
  21: bear
  22: zebra
  23: giraffe
  24: backpack
  25: umbrella
  26: handbag
  27: tie
  28: suitcase
  29: frisbee
  30: skis
  31: snowboard
  32: sports ball
  33: kite
  34: baseball bat
  35: baseball glove
  36: skateboard
  37: surfboard
  38: tennis racket
  39: bottle
  40: wine glass
  41: cup
  42: fork
  43: knife
  44: spoon
  45: bowl
  46: banana
  47: apple
  48: sandwich
  49: orange
  50: broccoli
  51: carrot
  52: hot dog
  53: pizza
  54: donut
  55: cake
  56: chair
  57: couch
  58: potted plant
  59: bed
  60: dining table
  61: toilet
  62: tv
  63: laptop
  64: mouse
  65: remote
  66: keyboard
  67: cell phone
  68: microwave
  69: oven
  70: toaster
  71: sink
  72: refrigerator
  73: book
  74: clock
  75: vase
  76: scissors
  77: teddy bear
  78: hair drier
  79: toothbrush